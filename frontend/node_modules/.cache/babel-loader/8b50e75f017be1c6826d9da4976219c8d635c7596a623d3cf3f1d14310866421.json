{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\rule-engine\\\\rule-engine-app\\\\frontend\\\\src\\\\components\\\\RuleForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RuleForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [ruleString, setRuleString] = useState('');\n  const [combineRuleIds, setCombineRuleIds] = useState('');\n  const [combinedAST, setCombinedAST] = useState(null); // State to store the combined AST\n\n  const handleCreateSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send request to create a new rule\n      await axios.post('http://localhost:3000/api/rules', {\n        name,\n        rule_string: ruleString\n      });\n      alert('Rule created successfully');\n      setName('');\n      setRuleString('');\n    } catch (error) {\n      alert('Error creating rule');\n    }\n  };\n  const handleCombineSubmit = async e => {\n    e.preventDefault();\n    try {\n      const ruleIdsArray = combineRuleIds.split(',').map(id => id.trim()).filter(id => id);\n      if (ruleIdsArray.length === 0) {\n        alert('Please enter valid rule IDs.');\n        return;\n      }\n      const response = await axios.post('http://localhost:3000/api/rules/combine', {\n        ruleIds: ruleIdsArray // Sending ruleIds correctly\n      });\n      setCombinedAST(response.data.combinedAST); // Set the combined AST to state\n      alert('Rules combined successfully');\n      setCombineRuleIds('');\n    } catch (error) {\n      console.error('Error combining rules:', error.response ? error.response.data : error.message);\n      alert('Error combining rules');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCreateSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rule Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Rule String\",\n        value: ruleString,\n        onChange: e => setRuleString(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCombineSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Combine Rule IDs (comma-separated)\",\n        value: combineRuleIds,\n        onChange: e => setCombineRuleIds(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Combined AST:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(combinedAST, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(RuleForm, \"aaKLMe8EVFIdUc4lENfieEuwOeo=\");\n_c = RuleForm;\nexport default RuleForm;\nvar _c;\n$RefreshReg$(_c, \"RuleForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RuleForm","_s","name","setName","ruleString","setRuleString","combineRuleIds","setCombineRuleIds","combinedAST","setCombinedAST","handleCreateSubmit","e","preventDefault","post","rule_string","alert","error","handleCombineSubmit","ruleIdsArray","split","map","id","trim","filter","length","response","ruleIds","data","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/rule-engine/rule-engine-app/frontend/src/components/RuleForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RuleForm() {\r\n    const [name, setName] = useState('');\r\n    const [ruleString, setRuleString] = useState('');\r\n    const [combineRuleIds, setCombineRuleIds] = useState('');\r\n    const [combinedAST, setCombinedAST] = useState(null); // State to store the combined AST\r\n\r\n    const handleCreateSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Send request to create a new rule\r\n            await axios.post('http://localhost:3000/api/rules', { name, rule_string: ruleString });\r\n            alert('Rule created successfully');\r\n            setName('');\r\n            setRuleString('');\r\n        } catch (error) {\r\n            alert('Error creating rule');\r\n        }\r\n    };\r\n\r\n    const handleCombineSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const ruleIdsArray = combineRuleIds.split(',').map(id => id.trim()).filter(id => id);\r\n    \r\n            if (ruleIdsArray.length === 0) {\r\n                alert('Please enter valid rule IDs.');\r\n                return;\r\n            }\r\n    \r\n            const response = await axios.post('http://localhost:3000/api/rules/combine', {\r\n                ruleIds: ruleIdsArray // Sending ruleIds correctly\r\n            });\r\n    \r\n            setCombinedAST(response.data.combinedAST); // Set the combined AST to state\r\n            alert('Rules combined successfully');\r\n            setCombineRuleIds('');\r\n        } catch (error) {\r\n            console.error('Error combining rules:', error.response ? error.response.data : error.message);\r\n            alert('Error combining rules');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Rule</h2>\r\n            <form onSubmit={handleCreateSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Rule Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n                <textarea\r\n                    placeholder=\"Rule String\"\r\n                    value={ruleString}\r\n                    onChange={(e) => setRuleString(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Create Rule</button>\r\n            </form>\r\n\r\n            <h2>Combine Rules</h2>\r\n            <form onSubmit={handleCombineSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Combine Rule IDs (comma-separated)\"\r\n                    value={combineRuleIds}\r\n                    onChange={(e) => setCombineRuleIds(e.target.value)}\r\n                    required\r\n                />\r\n                <button type=\"submit\">Combine Rules</button>\r\n            </form>\r\n\r\n            {combinedAST && (\r\n                <div>\r\n                    <h3>Combined AST:</h3>\r\n                    <pre>{JSON.stringify(combinedAST, null, 2)}</pre> {/* Display the combined AST */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RuleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}