{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MARGESH\\\\OneDrive\\\\Desktop\\\\zeotap\\\\rule-engine\\\\rule-engine-app\\\\frontend\\\\src\\\\components\\\\RuleForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RuleForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [ruleString, setRuleString] = useState('');\n  const [combineRuleIds, setCombineRuleIds] = useState(''); // State for rule IDs to combine\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Prepare request payload\n      const requestData = {\n        name,\n        rule_string: ruleString,\n        combine_rule_ids: combineRuleIds ? combineRuleIds.split(',').map(id => id.trim()) : []\n      };\n\n      // Send request to create a rule\n      await axios.post('http://localhost:3000/api/rules', requestData);\n      alert('Rule created successfully');\n      setName('');\n      setRuleString('');\n      setCombineRuleIds(''); // Clear the combined rule IDs\n    } catch (error) {\n      alert('Error creating rule');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Rule Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Rule String\",\n        value: ruleString,\n        onChange: e => setRuleString(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Combine Rule IDs (comma-separated)\",\n        value: combineRuleIds,\n        onChange: e => setCombineRuleIds(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(RuleForm, \"pUUJIe3yqROuyOr8xvS+2W6hgM8=\");\n_c = RuleForm;\nexport default RuleForm;\nvar _c;\n$RefreshReg$(_c, \"RuleForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RuleForm","_s","name","setName","ruleString","setRuleString","combineRuleIds","setCombineRuleIds","handleSubmit","e","preventDefault","requestData","rule_string","combine_rule_ids","split","map","id","trim","post","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/MARGESH/OneDrive/Desktop/zeotap/rule-engine/rule-engine-app/frontend/src/components/RuleForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction RuleForm() {\r\n    const [name, setName] = useState('');\r\n    const [ruleString, setRuleString] = useState('');\r\n    const [combineRuleIds, setCombineRuleIds] = useState(''); // State for rule IDs to combine\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            // Prepare request payload\r\n            const requestData = {\r\n                name,\r\n                rule_string: ruleString,\r\n                combine_rule_ids: combineRuleIds ? combineRuleIds.split(',').map(id => id.trim()) : []\r\n            };\r\n\r\n            // Send request to create a rule\r\n            await axios.post('http://localhost:3000/api/rules', requestData);\r\n            alert('Rule created successfully');\r\n            setName('');\r\n            setRuleString('');\r\n            setCombineRuleIds(''); // Clear the combined rule IDs\r\n        } catch (error) {\r\n            alert('Error creating rule');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create Rule</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Rule Name\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    required\r\n                />\r\n                <textarea\r\n                    placeholder=\"Rule String\"\r\n                    value={ruleString}\r\n                    onChange={(e) => setRuleString(e.target.value)}\r\n                    required\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Combine Rule IDs (comma-separated)\"\r\n                    value={combineRuleIds}\r\n                    onChange={(e) => setCombineRuleIds(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Create Rule</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RuleForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}